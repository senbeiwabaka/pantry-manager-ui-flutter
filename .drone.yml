kind: pipeline
type: docker
name: amd64

platform:
  arch: amd64

steps:
  - name: Build & Test
    image: ubuntu:20.04
    commands:
      - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
      - apt -qq update > /dev/null && apt -qq install -y curl git unzip xz-utils zip libglu1-mesa openjdk-8-jdk wget sqlite3 libsqlite3-0 libsqlite3-dev > /dev/null
      # - useradd -ms /bin/bash developer
      # - USER developer
      # - WORKDIR /home/developer
      - mkdir -p /home/Android/sdk
      - ls 
      - export ANDROID_SDK_ROOT=/home/Android/sdk
      - mkdir -p .android && touch .android/repositories.cfg
      - cd /home && wget -qq -O sdk-tools.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > /dev/null
      - unzip -qq sdk-tools.zip > /dev/null && rm sdk-tools.zip
      - mv tools Android/sdk/tools
      - cd /home/Android/sdk/tools/bin && yes | ./sdkmanager --licenses
      - cd /home/Android/sdk/tools/bin && ./sdkmanager "build-tools;29.0.2" "patcher;v4" "platform-tools" "platforms;android-29" "sources;android-29"
      - export PATH="$PATH:/home/Android/sdk/platform-tools"
      - cd /home && git clone https://github.com/flutter/flutter.git
      - export PATH="$PATH:/home/flutter/bin"
      - cd /drone/src/
      - dart tool/linux_setup.dart
      - flutter test
      - dart test_cov_console

  - name: code-analysis
    image: aosapps/drone-sonar-plugin
    settings:
      sonar_host:
        from_secret: sonar_host
      sonar_token:
        from_secret: sonar_token
