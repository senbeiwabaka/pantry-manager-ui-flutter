# kind: pipeline
# type: docker
# name: Build & Test

# platform:
#   arch: amd64

# steps:
#   - name: Build & Test
#     image: ubuntu:20.04
#     commands:
#       - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
#       - apt-get -qq update > /dev/null && apt-get -qq install -y curl git unzip xz-utils zip libglu1-mesa openjdk-8-jdk wget sqlite3 libsqlite3-0 libsqlite3-dev > /dev/null
#       - mkdir -p /home/Android/sdk
#       - export ANDROID_SDK_ROOT=/home/Android/sdk
#       - mkdir -p .android && touch .android/repositories.cfg
#       - mkdir -p /root/.android && touch /root/.android/repositories.cfg
#       - cd /home && wget -qq -O sdk-tools.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > /dev/null
#       - unzip -q sdk-tools.zip > /dev/null && rm sdk-tools.zip
#       - mv tools Android/sdk/tools
#       - cd /home/Android/sdk/tools/bin && yes | ./sdkmanager --licenses
#       - cd /home/Android/sdk/tools/bin && ./sdkmanager "build-tools;34.0.0" "platform-tools" "platforms;android-33" "sources;android-34" > /dev/null
#       - export PATH="$PATH:/home/Android/sdk/platform-tools"
#       - cd /home && git clone https://github.com/flutter/flutter.git
#       - export PATH="$PATH:/home/flutter/bin"
#       - cd /drone/src/
#       #- dart pub global activate test_cov_console
#       - export PATH="$PATH:/root/.pub-cache/bin"
#       - flutter test
#       # - dart run test_cov_console

# ---
kind: pipeline
type: docker
name: Code Analysis

platform:
  arch: amd64

steps:
  - name: Analysis
    image: ubuntu:20.04
    environment:
      sonar_host:
        from_secret: sonar_host
      sonar_token:
        from_secret: sonar_token
      sonar_version: "4.8.0.2856"
    commands:
      - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
      - apt-get -qq update > /dev/null && apt-get -qq install -y curl git unzip xz-utils zip libglu1-mesa openjdk-11-jdk wget sqlite3 libsqlite3-0 libsqlite3-dev > /dev/null
      - mkdir -p /home/Android/sdk
      - export ANDROID_SDK_ROOT=/home/Android/sdk
      - mkdir -p .android && touch .android/repositories.cfg
      # - mkdir -p /root/.android && touch /root/.android/repositories.cfg
      - cd /home && wget -qq -O sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip > /dev/null
      - ls /home
      - unzip -q sdk-tools.zip > /dev/null && rm sdk-tools.zip
      - ls
      - mv cmdline-tools Android/sdk/tools
      - cd /home/Android/cmdline-tools/bin && yes | ./sdkmanager --licenses
      - cd /home/Android/cmdline-tools/bin && ./sdkmanager "build-tools;34.0.0" "platform-tools" "platforms;android-33" "sources;android-34" > /dev/null
      - ls /home/Android/
      - ls /home/Android/cmdline-tools
      - export PATH="$PATH:/home/Android/sdk/platform-tools"
      - cd /home && git clone https://github.com/flutter/flutter.git
      - export PATH="$PATH:/home/flutter/bin"
      - cd /drone/src/
      - dart pub global activate test_cov_console
      - export PATH="$PATH:/root/.pub-cache/bin"
      - flutter test
      - dart run test_cov_console
      - flutter test --machine --coverage > tests.output
      - flutter analyze --no-fatal-warnings --no-fatal-infos
      - cd /bin && wget -qq -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$sonar_version.zip > /dev/null
      - cd /bin && unzip -qq sonar-scanner.zip > /dev/null && rm sonar-scanner.zip
      - export PATH="$PATH:/bin/sonar-scanner-$sonar_version/bin"
      - sonar-scanner -Dsonar.host.url=$sonar_host -Dsonar.login=$sonar_token -Dproject.settings=/drone/src/sonar-project.properties

  - name: what
    image: ubuntu:20.04
    environment:
      sonar_host:
        from_secret: sonar_host
      sonar_token:
        from_secret: sonar_token
      sonar_version: "4.8.0.2856"
    commands:
      - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
      - apt-get -qq update > /dev/null && apt-get -qq install -y curl git unzip xz-utils zip libglu1-mesa openjdk-11-jdk wget sqlite3 libsqlite3-0 libsqlite3-dev > /dev/null
      - yes | apt-get -qq install android-sdk > /dev/null
      - ls /usr/lib
      - ls /usr/lib/android-sdk
      - ls /usr/lib/android-sdk/tools
      - ls /usr/lib/android-sdk/tools/bin
      # - mkdir -p /home/Android/sdk
      # - export ANDROID_SDK_ROOT=/home/Android/sdk
      # - mkdir -p .android && touch .android/repositories.cfg
      # - mkdir -p /root/.android && touch /root/.android/repositories.cfg
      # - cd /home && wget -qq -O sdk-tools.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > /dev/null
      # - unzip -q sdk-tools.zip > /dev/null && rm sdk-tools.zip
      # - mv tools Android/sdk/tools
      - yes | /usr/lib/android-sdk/sdkmanager --licenses
      - cd /home/Android/sdk/tools/bin && yes | ./sdkmanager --licenses
      - cd /home/Android/sdk/tools/bin && ./sdkmanager "build-tools;34.0.0" "platform-tools" "platforms;android-33" "sources;android-34" > /dev/null
      - export PATH="$PATH:/home/Android/sdk/platform-tools"
      - cd /home && git clone https://github.com/flutter/flutter.git
      - export PATH="$PATH:/home/flutter/bin"
      - cd /drone/src/
      - dart pub global activate test_cov_console
      - export PATH="$PATH:/root/.pub-cache/bin"
      - flutter test
      - dart run test_cov_console
      - flutter test --machine --coverage > tests.output
      - flutter analyze --no-fatal-warnings --no-fatal-infos
      - cd /bin && wget -qq -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$sonar_version.zip > /dev/null
      - cd /bin && unzip -qq sonar-scanner.zip > /dev/null && rm sonar-scanner.zip
      - export PATH="$PATH:/bin/sonar-scanner-$sonar_version/bin"
      - sonar-scanner -Dsonar.host.url=$sonar_host -Dsonar.login=$sonar_token -Dproject.settings=/drone/src/sonar-project.properties

  # - name: Analysis
  #   image: ubuntu:20.04
  #   environment:
  #     sonar_host:
  #       from_secret: sonar_host
  #     sonar_token:
  #       from_secret: sonar_token
  #     sonar_version: "4.8.0.2856"
  #   commands:
  #     - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
  #     - apt-get -qq update > /dev/null && apt-get -qq install -y curl git unzip xz-utils zip libglu1-mesa openjdk-11-jdk wget sqlite3 libsqlite3-0 libsqlite3-dev > /dev/null
  #     - mkdir -p /home/Android/sdk
  #     - export ANDROID_SDK_ROOT=/home/Android/sdk
  #     - mkdir -p .android && touch .android/repositories.cfg
  #     # - mkdir -p /root/.android && touch /root/.android/repositories.cfg
  #     - cd /home && wget -qq -O sdk-tools.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > /dev/null
  #     - unzip -q sdk-tools.zip > /dev/null && rm sdk-tools.zip
  #     - mv tools Android/sdk/tools
  #     - cd /home/Android/sdk/tools/bin && yes | ./sdkmanager --licenses
  #     - cd /home/Android/sdk/tools/bin && ./sdkmanager "build-tools;34.0.0" "platform-tools" "platforms;android-33" "sources;android-34" > /dev/null
  #     - export PATH="$PATH:/home/Android/sdk/platform-tools"
  #     - cd /home && git clone https://github.com/flutter/flutter.git
  #     - export PATH="$PATH:/home/flutter/bin"
  #     - cd /drone/src/
  #     - dart pub global activate test_cov_console
  #     - export PATH="$PATH:/root/.pub-cache/bin"
  #     - flutter test
  #     - dart run test_cov_console
  #     - flutter test --machine --coverage > tests.output
  #     - flutter analyze --no-fatal-warnings --no-fatal-infos
  #     - cd /bin && wget -qq -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$sonar_version.zip > /dev/null
  #     - cd /bin && unzip -qq sonar-scanner.zip > /dev/null && rm sonar-scanner.zip
  #     - export PATH="$PATH:/bin/sonar-scanner-$sonar_version/bin"
  #     - sonar-scanner -Dsonar.host.url=$sonar_host -Dsonar.login=$sonar_token -Dproject.settings=/drone/src/sonar-project.properties

  # - name: sonar-scanner
  #   image: ubuntu:20.04
  #   environment:
  #     sonar_host:
  #       from_secret: sonar_host
  #     sonar_token:
  #       from_secret: sonar_token
  #     sonar_version: "4.8.0.2856"
  #   commands:
  #     - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
  #     - apt-get -qq update > /dev/null && apt-get -qq install -y curl git unzip xz-utils zip libglu1-mesa openjdk-11-jdk wget > /dev/null
  #     - cd /bin && wget -qq -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$sonar_version.zip > /dev/null
  #     - cd /bin && unzip -qq sonar-scanner.zip > /dev/null && rm sonar-scanner.zip
  #     - export PATH="$PATH:/bin/sonar-scanner-$sonar_version/bin"
  #     - sonar-scanner -Dsonar.host.url=$sonar_host -Dsonar.login=$sonar_token -Dproject.settings=/drone/src/sonar-project.properties
